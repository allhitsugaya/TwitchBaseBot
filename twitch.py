
import sqlite3
from telegram import Update, InputMediaPhoto, InputMediaVideo
from telegram.ext import Updater, MessageHandler, Filters, CommandHandler, CallbackContext
from telegram.error import BadRequest

#–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = 'YOUR_TOKEN'
TARGET_USER_ID = YOUR_ID
CHANNEL_USERNAME = 'your_channelname'

conn = sqlite3.connect('messages.db', check_same_thread=False)
cursor = conn.cursor()
cursor.execute('''
    CREATE TABLE IF NOT EXISTS messages (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER,
        username TEXT,
        message_type TEXT,
        file_id TEXT,
        caption TEXT
    )
''')
conn.commit()

def start(update: Update, context: CallbackContext):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start."""
    welcome_message = (
        "üéâ –ü—Ä–∏–≤—ñ—Ç! –Ø ü§ñ –±–æ—Ç –¥–ª—è Twitch –∫–∞–Ω–∞–ª—É - difu3en! üïπÔ∏è\n\n"
        "–ù–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ –º–µ–¥—ñ–∞, —ñ —è –ø–µ—Ä–µ–¥–∞–º –π–æ–≥–æ –¥–∞–ª—ñ! üì©\n\n"
        "–†–æ–∑—Ä–æ–±–Ω–∏–∫: @all_hitsugaya üë®‚Äçüíª"
    )
    update.message.reply_text(welcome_message)

def check_subscription(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª."""
    try:
        member = updater.bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
        if member.status in ['member', 'creator', 'administrator']:
            return True
        else:
            return False
    except BadRequest:
        #–ï—Å–ª–∏ –±–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç
        return False

def store_message(update: Update, context: CallbackContext):
    message = update.message
    user = message.from_user

    #–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not check_subscription(user.id):
        message.reply_text(
            "‚ùå –©–æ–± –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—å–æ–≥–æ –±–æ—Ç–∞, –±—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: "
            f"{CHANNEL_USERNAME}"
        )
        return

    message_type = None
    file_id = None

    #–û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–∞–µ–º file_id
    if message.photo:
        message_type = 'photo'
        file_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ –≤ –Ω–∞–∏–±–æ–ª—å—à–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏
    elif message.video:
        message_type = 'video'
        file_id = message.video.file_id
    elif message.text:
        message_type = 'text'
        file_id = None
    else:
        return  #–ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è

    #–°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute('''
        INSERT INTO messages (user_id, username, message_type, file_id, caption)
        VALUES (?, ?, ?, ?, ?)
    ''', (
        user.id,
        user.username or user.full_name,
        message_type,
        file_id,
        message.caption or message.text or ''
    ))
    conn.commit()

    #–ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –î–∏–º–µ
    forward_message(update, context, user)

def forward_message(update: Update, context: CallbackContext, sender_user):
    message = update.message
    sender_info = f"üì® –í—ñ–¥ @{sender_user.username}" if sender_user.username else f"üì® –í—ñ–¥ {sender_user.full_name}"

    if message.photo:
        context.bot.send_photo(
            chat_id=TARGET_USER_ID,
            photo=message.photo[-1].file_id,
            caption=f"{sender_info}\n{message.caption or ''}"
        )
    elif message.video:
        context.bot.send_video(
            chat_id=TARGET_USER_ID,
            video=message.video.file_id,
            caption=f"{sender_info}\n{message.caption or ''}"
        )
    elif message.text:
        context.bot.send_message(
            chat_id=TARGET_USER_ID,
            text=f"{sender_info}\n{message.text}"
        )

def main():
    global updater
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(MessageHandler(Filters.text | Filters.photo | Filters.video, store_message))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
